//@version=4
study("EnguBlue", overlay=true)

startHour = input(title="Start Hour", type=input.integer, defval=9, minval=0, maxval=23)
startMinute = input(title="Start Minute", type=input.integer, defval=0, minval=0, maxval=59)
endHour = input(title="End Hour", type=input.integer, defval=18, minval=0, maxval=23)
endMinute = input(title="End Minute", type=input.integer, defval=0, minval=0, maxval=59)
isEngulfing(openBarCurrent, closeBarPrevious, openBarPrevious, closeBarCurrent) =>
    (openBarCurrent <= closeBarPrevious) and (openBarCurrent < openBarPrevious) and (closeBarCurrent > openBarPrevious)
currentHour = hour(time)
currentMinute = minute(time)
withinTimeRange = false
if currentHour >= startHour and currentHour <= endHour
    if currentHour == startHour and currentMinute >= startMinute
        withinTimeRange := true
    else if currentHour == endHour and currentMinute <= endMinute
        withinTimeRange := true
    else if currentHour > startHour and currentHour < endHour
        withinTimeRange := true
bullishEngulfingM5 = security(syminfo.tickerid, "5", isEngulfing(open[1], close[1], open, close))
bearishEngulfingM5 = security(syminfo.tickerid, "5", isEngulfing(open[1], close[1], open, close))
bullishEngulfingM15 = security(syminfo.tickerid, "15", isEngulfing(open[1], close[1], open, close))
bearishEngulfingM15 = security(syminfo.tickerid, "15", isEngulfing(open[1], close[1], open, close))
bullishEngulfingH1 = security(syminfo.tickerid, "60", isEngulfing(open[1], close[1], open, close))
bearishEngulfingH1 = security(syminfo.tickerid, "60", isEngulfing(open[1], close[1], open, close))
alertcondition((withinTimeRange and (bullishEngulfingM5 or bearishEngulfingM5 or bullishEngulfingM15 or bearishEngulfingM15 or bullishEngulfingH1 or bearishEngulfingH1)), title = "Engulfing pattern...")
